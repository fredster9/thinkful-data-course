# -*- coding: utf-8 -*-
"""
Created on Sat Apr 11 19:50:39 2015

code from: https://github.com/sbchou/Parakeet/blob/master/parakeet.py

Invoke by opening Python in REPL:

from jarvis_parakeet import Parakeet
p = Parakeet('fakejarvis.txt')
p.parrot(# of words)

@author: fred
"""

import sys
import re
from random import choice

class Parakeet:
    
    def __init__(self, corpus_path):
        self.corpus = open(corpus_path, 'r')
        self.tokens = self.tokenize()
        self.bigrams = self.get_bigrams()
    
    def tokenize(self):
        """split by space and punctuation"""
        body = self.corpus.read()
        tokens = re.findall(r"[\w']+|[.,!?;]", body)
        return tokens

    def get_bigrams(self):
        """hash each word for it's possible suffix words"""
        bigrams = {}
        for i in range(len(self.tokens) - 1):
            prefix = self.tokens[i]
            suffix = self.tokens[i + 1]
            if prefix not in bigrams:
                bigrams[prefix] = []
            bigrams[prefix].append(suffix)
        self.stop = suffix
        
        return bigrams
        
    def parrot(self, size):
        """return text generated by markov babbler"""
        text = []
        startwords = [x for x in self.bigrams.keys() if x[0].isupper()]
        if startwords:
            prefix = choice(startwords)
        else:
            prefix = choice(self.bigrams.keys())
        text.append(prefix)
        
        for i in range(size - 1):
            if prefix == self.stop: #last word has no suffix
                if startwords:
                    prefix = choice(startwords)
                else:
                    prefix = choice(self.bigrams.keys())
            
            suffix = choice(self.bigrams[prefix])
            # random cohoice. theorietically if we hash duplicates then more common words show up more
            text.append(suffix)
            prefix = suffix
        
        string = self.format_string(text)
        return string
    
    @staticmethod
    def format_string(text):
        """ reformat to readble string"""
        string = " ".join(text)
        punct = ["?", "!", ".", ",", ";"] 
        
        for p in punct:
            string = string.replace(" " + p, p)

        return string
        